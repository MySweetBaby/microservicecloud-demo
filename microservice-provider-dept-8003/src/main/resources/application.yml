server:
  port: 8003
mybatis:
  config-location: classpath:mybatis/mybatis.xml  #mybatis配置文件
  mapper-locations: classpath:mybatis/mapper/**/*.xml  #mybatis映射文件
  type-aliases-package: com.staryea.entities  #mybatis对应的实体类目录


spring:
  application:
    name: microservice-provider-dept
#  profiles: dept-8003

  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/e3mall?useUnicode=true&characterEncoding=UTF-8&&serverTimezone=UTC
    username: root
    password: 123456
    type: com.alibaba.druid.pool.DruidDataSource
    initialSize: 5
    minIdle: 5
    maxIdle: 10
    maxActive: 20
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: true
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: false
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,log4j
     # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    # 合并多个DruidDataSource的监控数据
    #spring.datasource.useGlobalDataSourceStat=true

#    dbcp2:
#      max-idle: 10
#      min-idle: 5
#      max-wait-millis: 60000
#      initial-size: 5

eureka:
  client:
    service-url:
      defaultZone: http://eureka7001.com:7001/eureka/ #,http://eureka7002.com:7002/eureka/,http://eureka7003.com:7003/eureka/
  instance:
    instance-id: microservice-dept-8002 #自定义初始化实例的ID
    prefer-ip-address: true #访问路径可以显示IP





info: # 展示前台页面点击微服务名称需要显示的内容
  app.name: staryea-microservice-dept-8002
  company.name: starya
  build.artifactId: $project.artifactId$
  bulid.verison: $project.verison$
